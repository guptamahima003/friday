{"ast":null,"code":"var _jsxFileName = \"/var/www/html/friday_app/src/components/frontPage/selectModel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Router, Route, Link, useRouteMatch, BrowserRouter, useHistory } from 'react-router-dom';\nimport NoData from '../noData/Index';\nimport CarDescription from './carDesc';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectModel = props => {\n  _s();\n\n  let history = useHistory();\n  const [modelName, setBrand] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(0);\n  let {\n    path,\n    url\n  } = useRouteMatch();\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n    history.push(\"/model/:desc\");\n  };\n\n  useEffect(() => {\n    const ac = new AbortController();\n    fetch(`http://uimocks.infoedge.com/models.json`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(response => {\n      setBrand(response);\n    }).catch(ex => console.error(ex));\n    return () => ac.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brandName\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.brand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.brand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), modelName, modelName != null ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Select Listed Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChange,\n          value: selectedValue,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'Select Brand',\n            children: \"Select Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), modelName.map((modelName, index) => props.brand == modelName.make && /*#__PURE__*/_jsxDEV(\"option\", {\n            value: modelName.model,\n            children: modelName.model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 48\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(NoData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/model/:desc`,\n        render: props => /*#__PURE__*/_jsxDEV(CarDescription, {\n          models: selectedValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectModel, \"aguYjyx0/kFtNUztE+E92QMwDQc=\", false, function () {\n  return [useHistory, useRouteMatch];\n});\n\n_c = SelectModel;\nexport default SelectModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectModel\");","map":{"version":3,"sources":["/var/www/html/friday_app/src/components/frontPage/selectModel.js"],"names":["React","useState","useEffect","Router","Route","Link","useRouteMatch","BrowserRouter","useHistory","NoData","CarDescription","SelectModel","props","history","modelName","setBrand","selectedValue","setSelectedValue","path","url","handleChange","e","target","value","push","ac","AbortController","fetch","method","then","res","json","response","catch","ex","console","error","abort","brand","map","index","make","model"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Router, Route, Link, useRouteMatch, BrowserRouter, useHistory } from 'react-router-dom';\nimport NoData from '../noData/Index';\nimport CarDescription from './carDesc';\nimport './style.css'\n\nconst SelectModel = (props) => {\n  let history = useHistory();\n  const [modelName, setBrand] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(0)\n  let { path, url } = useRouteMatch();\n  const handleChange = (e) => {\n    setSelectedValue(e.target.value)\n    history.push(\"/model/:desc\");\n  }\n  useEffect(() => {\n    const ac = new AbortController();\n\n    fetch(\n      `http://uimocks.infoedge.com/models.json`,\n      {\n        method: \"GET\",\n      },\n    )\n      .then(res => res.json())\n      .then(response => {\n        setBrand(response);\n      })\n      .catch(ex => console.error(ex));\n    return () => ac.abort();\n\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className='brandName'>\n        <span>{props.brand}</span>\n        <span>{props.brand}</span>\n      </div>\n      {modelName}\n      {\n        modelName != null ? \n      \n      <React.Fragment>\n      <div className='title'>Select Listed Model</div>\n      <div className='selectWrap'>\n        <select onChange={handleChange} value={selectedValue}>\n          <option value={'Select Brand'}>Select Model</option>\n          {modelName.map((modelName, index) => (\n            (props.brand == modelName.make) && <option\n              key={index}\n              value={modelName.model}\n            >\n              {modelName.model}\n            </option>\n          ))}\n\n        </select>\n      </div>\n      </React.Fragment> :\n      <NoData />\n    }\n      <div>\n        <Route path={`/model/:desc`} render={(props) => <CarDescription models={selectedValue} />} />\n      </div>\n\n    </React.Fragment>\n  )\n}\n\nexport default SelectModel;"]},"metadata":{},"sourceType":"module"}