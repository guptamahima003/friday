{"ast":null,"code":"var _jsxFileName = \"/var/www/html/friday_app/src/components/pages/selectModel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, useRouteMatch, useHistory } from 'react-router-dom';\nimport { getFetchCall } from '../api/fetchFunc';\nimport NoData from '../noData/Index';\nimport CarDescription from './carDesc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectModel = props => {\n  _s();\n\n  let history = useHistory();\n  const [modelName, setBrand] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(0);\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n    history.push(\"/model/:desc\");\n  };\n\n  useEffect(() => {\n    getFetchCall('http://uimocks.infoedge.com/models.json').then(res => {\n      setBrand(res);\n    }, []);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brandName\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.brand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.brand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), modelName.some(el => el.make == props.brand) == true ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Select Listed Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alertBanner\",\n        children: \"\\u26A0 Please select 3er for BMW and Fiesta, C-Max for Ford\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChange,\n          value: selectedValue,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'Select Brand',\n            children: \"Select Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), modelName.map((modelName, index) => props.brand == modelName.make && /*#__PURE__*/_jsxDEV(\"option\", {\n            value: modelName.model,\n            children: modelName.model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 48\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(NoData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/model/:desc`,\n        render: props => /*#__PURE__*/_jsxDEV(CarDescription, {\n          models: selectedValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectModel, \"7kpAZ+IvH/2BaOh/VmGQdeV6UYQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = SelectModel;\nexport default SelectModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectModel\");","map":{"version":3,"sources":["/var/www/html/friday_app/src/components/pages/selectModel.js"],"names":["React","useState","useEffect","Route","useRouteMatch","useHistory","getFetchCall","NoData","CarDescription","SelectModel","props","history","modelName","setBrand","selectedValue","setSelectedValue","handleChange","e","target","value","push","then","res","brand","some","el","make","map","index","model"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,kBAAjD;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,WAA3B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,MAAIC,OAAO,GAAGN,UAAU,EAAxB;AACA,QAAM,CAACO,SAAD,EAAYC,QAAZ,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAAD,CAAlD;;AACA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,cAAb;AACD,GAHD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAAC,yCAAD,CAAZ,CAAwDe,IAAxD,CAA6DC,GAAG,IAAI;AAClET,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACD,KAFD,EAEE,EAFF;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAOZ,KAAK,CAACa;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOb,KAAK,CAACa;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGX,SAAS,CAACY,IAAV,CAAeC,EAAE,IAAIA,EAAE,CAACC,IAAH,IAAWhB,KAAK,CAACa,KAAtC,KAAgD,IAAhD,gBAED,QAAC,KAAD,CAAO,QAAP;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAQ,UAAA,QAAQ,EAAEP,YAAlB;AAAgC,UAAA,KAAK,EAAEF,aAAvC;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGF,SAAS,CAACe,GAAV,CAAc,CAACf,SAAD,EAAYgB,KAAZ,KACZlB,KAAK,CAACa,KAAN,IAAeX,SAAS,CAACc,IAA1B,iBAAmC;AAEjC,YAAA,KAAK,EAAEd,SAAS,CAACiB,KAFgB;AAAA,sBAIhCjB,SAAS,CAACiB;AAJsB,aAC5BD,KAD4B;AAAA;AAAA;AAAA;AAAA,kBADpC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC,gBAqBD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA3BF,eA6BE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,cAAd;AAA6B,QAAA,MAAM,EAAGlB,KAAD,iBAAW,QAAC,cAAD;AAAgB,UAAA,MAAM,EAAEI;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAnDD;;GAAML,W;UACUJ,U;;;KADVI,W;AAqDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, useRouteMatch, useHistory } from 'react-router-dom';\nimport { getFetchCall } from '../api/fetchFunc';\nimport NoData from '../noData/Index';\nimport CarDescription from './carDesc';\n\nconst SelectModel = (props) => {\n  let history = useHistory();\n  const [modelName, setBrand] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(0)\n  const handleChange = (e) => {\n    setSelectedValue(e.target.value)\n    history.push(\"/model/:desc\");\n  }\n  useEffect(() => {\n    getFetchCall('http://uimocks.infoedge.com/models.json').then(res => {       \n      setBrand(res) \n    },[]);\n    \n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className='brandName'>\n        <span>{props.brand}</span>\n        <span>{props.brand}</span>\n      </div>\n     \n      {modelName.some(el => el.make == props.brand) == true ? \n      \n      <React.Fragment>\n      <div className='title'>Select Listed Model</div>\n      <div class=\"alertBanner\">\n            &#x26A0; Please select 3er for BMW and Fiesta, C-Max for Ford</div>\n      <div className='selectWrap'>\n        <select onChange={handleChange} value={selectedValue}>\n          <option value={'Select Brand'}>Select Model</option>\n          {modelName.map((modelName, index) => (\n            (props.brand == modelName.make) && <option\n              key={index}\n              value={modelName.model}\n            >\n              {modelName.model}\n            </option>\n          ))}\n\n        </select>\n      </div>\n      </React.Fragment> :\n      <NoData />\n    }\n      <div>\n        <Route path={`/model/:desc`} render={(props) => <CarDescription models={selectedValue} />} />\n      </div>\n\n    </React.Fragment>\n  )\n}\n\nexport default SelectModel;"]},"metadata":{},"sourceType":"module"}