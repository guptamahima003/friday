{"ast":null,"code":"var _jsxFileName = \"/var/www/html/friday_app/src/components/frontPage/selectModel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Router, Route, Link, useRouteMatch, BrowserRouter, IndexRoute } from 'react-router-dom';\nimport CarDescription from './carDesc';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectModel = props => {\n  _s();\n\n  const [modelName, setBrand] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(0);\n  let {\n    path,\n    url\n  } = useRouteMatch();\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n  };\n\n  useEffect(() => {\n    const ac = new AbortController();\n    fetch(`http://uimocks.infoedge.com/models.json`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(response => {\n      setBrand(response);\n    }).catch(ex => console.error(ex));\n    return () => ac.abort();\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange,\n      value: selectedValue,\n      children: modelName.map((modelName, index) => props.brand == modelName.make && /*#__PURE__*/_jsxDEV(\"option\", {\n        value: modelName.model,\n        children: modelName.model\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/model/:desc`\",\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/model/:desc`,\n        render: props => /*#__PURE__*/_jsxDEV(CarDescription, {\n          models: selectedValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SelectModel, \"aFnq8DZOTqUVGwPqeE3y5bdnR0Q=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = SelectModel;\nexport default SelectModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectModel\");","map":{"version":3,"sources":["/var/www/html/friday_app/src/components/frontPage/selectModel.js"],"names":["React","useState","useEffect","Router","Route","Link","useRouteMatch","BrowserRouter","IndexRoute","CarDescription","SelectModel","props","modelName","setBrand","selectedValue","setSelectedValue","path","url","handleChange","e","target","value","ac","AbortController","fetch","method","then","res","json","response","catch","ex","console","error","abort","map","index","brand","make","model"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA6BC,aAA7B,EAA4CC,aAA5C,EAA2DC,UAA3D,QAA6E,kBAA7E;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAO,aAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAAD,CAAlD;AACA,MAAI;AAAEe,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBX,aAAa,EAAjC;;AACA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAED,GAHD;;AAICnB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMoB,EAAE,GAAG,IAAIC,eAAJ,EAAX;AACFC,IAAAA,KAAK,CACF,yCADE,EAEH;AACEC,MAAAA,MAAM,EAAE;AADV,KAFG,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOGF,IAPH,CAOQG,QAAQ,IAAI;AACfhB,MAAAA,QAAQ,CAACgB,QAAD,CAAR;AACF,KATH,EAUGC,KAVH,CAUSC,EAAE,IAAIC,OAAO,CAACC,KAAR,CAAcF,EAAd,CAVf;AAWE,WAAO,MAAMT,EAAE,CAACY,KAAH,EAAb;AACH,GAdW,CAAT;AAgBF,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,4BACM;AAAQ,MAAA,QAAQ,EAAEhB,YAAlB;AAAgC,MAAA,KAAK,EAAEJ,aAAvC;AAAA,gBACCF,SAAS,CAACuB,GAAV,CAAc,CAACvB,SAAD,EAAYwB,KAAZ,KACfzB,KAAK,CAAC0B,KAAN,IAAezB,SAAS,CAAC0B,IAA1B,iBAAmC;AAEnC,QAAA,KAAK,EAAE1B,SAAS,CAAC2B,KAFkB;AAAA,kBAI7B3B,SAAS,CAAC2B;AAJmB,SAC9BH,KAD8B;AAAA;AAAA;AAAA;AAAA,cADjC;AADD;AAAA;AAAA;AAAA;AAAA,YADN,eAYE;AAAA,mCAAS,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,cAAd;AAA6B,QAAA,MAAM,EAAGzB,KAAD,iBAAW,QAAC,cAAD;AAAgB,UAAA,MAAM,EAAEG;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CA5CD;;GAAMJ,W;UAGgBJ,a;;;KAHhBI,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Router, Route, Link,useRouteMatch, BrowserRouter, IndexRoute } from 'react-router-dom';\nimport CarDescription from './carDesc';\nimport './style.css'\n\nconst SelectModel = (props) => {\n  const [modelName, setBrand] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(0)\n  let { path, url } = useRouteMatch();\n  const handleChange = (e) => {\n    setSelectedValue(e.target.value)\n   \n  }\n   useEffect(() => {\n    const ac = new AbortController();\n  fetch(\n    `http://uimocks.infoedge.com/models.json`,\n    {\n      method: \"GET\",    \n    },    \n  )\n    .then(res => res.json())\n    .then(response => {\n       setBrand(response);\n    })\n    .catch(ex => console.error(ex));\n    return () => ac.abort();\n});\n\n\treturn (\n\t\t<React.Fragment>\n        <select onChange={handleChange} value={selectedValue}>        \n        {modelName.map((modelName, index) => (\n       (props.brand == modelName.make) && <option\n       key={index}\n       value={modelName.model}\n        >\n           { modelName.model}\n        </option>\n      ))}\n      \n    </select>\n    <button> <Link to='/model/:desc`'>next</Link> </button>\n    <div>\n    <Route path={`/model/:desc`} render={(props) => <CarDescription models={selectedValue}  />} />\n    </div>\n \n\t\t</React.Fragment>\n\t)\n}\n\nexport default SelectModel;"]},"metadata":{},"sourceType":"module"}